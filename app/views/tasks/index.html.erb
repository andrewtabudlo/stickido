<div id="myModal"></div>
<%= link_to "Create Main Task", new_project_task_path, remote: true, class: "btn btn-outline-primary" %>
<button class="showalltasks btn btn-outline-primary">Show All Tasks</button>
<a class="btn btn-outline-primary" href="#">new</a>

<div class="" id="timeLineFrame">
  <div class="scrollbar">

    <div class="handle"></div>
  </div>
  <div class="frame">
    <ul class="slidee">
      <% @duedates.each do |d| %>
      <li class="timelinesection border" id="<%= d.duedate %>"><%= d.duedate %></li>
      <script>
      $(`#<%= d.duedate %>`).click(function(){
        let target = '<%= d.duedate %>';
        $(`.${target}`).show();
        $(`.listFrameContainer`).not(`.${target}`).hide();
      });
      </script>
      <% end %>
    </ul>
  </div>
</div>

<div class="d-flex flex-wrap">
  <% @tasks.each do |task|%>
  <div class="<%= task.duedate %> listFrameContainer card" style="width: 18rem;">
    <div class="card-body">
      <h5 class="card-title"><%=task.name%></h5>
      <h6 class="card-subtitle mb-2 text-muted">Due: <%= task.duedate %></h6>
      <p class="card-text"><%= task.content %></p>
      <ul class="list-group border list-group-flush">
        <div class="card-header">
          Subtasks
        </div>
      <%@parent_id_one = task.id%>
      <%@subtasks_one = Task.where(task_id: @parent_id_one)%>
      <%if @subtasks_one != nil%>
        <%@subtasks_one.each do |t|%>
        <li class="list-group-item"><%= t.name %></li>
        <% end %>
      <% end %>
      </ul>
      <a href="#" class="card-link">Edit</a>
      <a href="#" class="card-link">Delete</a>
    </div>
  </div>
  <% end %>
</div>



<script>
console.log('toggle-lists.js connected');

const targets = document.getElementsByClassName('listFrameContainer');
const lis = document.getElementsByTagName('li');
const showMoreButtons = document.getElementsByClassName('showMoreInfo');

function hide(e) {
  const { nextElementSibling } = e.target;

  if (nextElementSibling && nextElementSibling.classList.contains('hide-this')) {
    setTimeout(() => {
      nextElementSibling.classList.toggle('hidden');
      e.target.classList.toggle('has-children');
    }, 0);
  }
}

function showMore(e) {
  const { nextElementSibling } = e.target;

  if (nextElementSibling && nextElementSibling.classList.contains('moreInfo')) {
    setTimeout(() => {
      nextElementSibling.classList.toggle('hidden');
      nextElementSibling.classList.toggle('show-animate');
    }, 0);
  }
}

for (let i = 0; i < showMoreButtons.length; i++) {
  showMoreButtons[i].addEventListener('click', showMore);

}

for (let i = 0; i < targets.length; i++) {
  targets[i].addEventListener('click', hide);
}

for (let i = 0; i < lis.length; i++) {
  lis[i].setAttribute('draggable', 'true');
}

</script>
<script>
console.log('script tag in views/tasks/index linked');
var slyelement = {
  obj: {},
  el: '.frame',
  options: {
    horizontal: 1,
    itemNav: 'forceCentered',
    smart: 1,
    activateMiddle: 1,
    activateOn: 'click',
    mouseDragging: 1,
    touchDragging: 1,
    releaseSwing: 1,
    startAt: 0,
    scrollBy: 0,
    speed: 300,
    elasticBounds: 1,
    easing: 'swing', // easeInOutElastic, easeOutBounce
    scrollBar: $('.scrollbar')
  }
};

$(function(){
  slyelement.obj = new Sly($(slyelement.el), slyelement.options);

  slyelement.obj.init();
});

$(window).resize(function(e) {
  slyelement.obj.reload();
});

$('.showalltasks').click(function(){
  $('.listFrameContainer').show();
})
</script>
